head(clownData)
clownSalaryMean <- mean(clownData$salary)
print(paste("Salary Mean: ", clownSalaryMean))
clownSalarySD <- sd(clownData$salary)
print(paste("Salary SD: ", clownSalarySD))
byGenderAndPartyMean <- aggregate(salary~gender+party, data = clownData, rt=mean(RT),hit=mean(hit))
group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
library(dplyr) # great library for massaging data
library(ggplot2) #library for making great plots
library(ez) # library for doing ANOVA statistics easily
clownData <- read.csv("clowns.csv", header = TRUE, sep="")
head(clownData)
clownSalaryMean <- mean(clownData$salary)
print(paste("Salary Mean: ", clownSalaryMean))
clownSalarySD <- sd(clownData$salary)
print(paste("Salary SD: ", clownSalarySD))
byGenderAndPartyMean <- aggregate(salary~gender+party, data = clownData, rt=mean(RT),hit=mean(hit))
print(byGenderAndPartyMean)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
library(dplyr) # great library for massaging data
library(ggplot2) #library for making great plots
library(ez) # library for doing ANOVA statistics easily
clownData <- read.csv("clowns.csv", header = TRUE, sep="")
head(clownData)
clownSalaryMean <- mean(clownData$salary)
print(paste("Salary Mean: ", clownSalaryMean))
clownSalarySD <- sd(clownData$salary)
print(paste("Salary SD: ", clownSalarySD))
byGenderAndPartyMean <- aggregate(salary~gender+party, data = clownData, rt=mean(RT),hit=mean(hit))
print(byGenderAndPartyMean)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
byGenderAndPartyMean <- aggregate(salary~gender+party, data = clownData)
print(byGenderAndPartyMean)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
clownData <- read.csv("clowns.csv", header = TRUE, sep="")
head(clownData)
clownSalaryMean <- mean(clownData$salary)
print(paste("Salary Mean: ", clownSalaryMean))
clownSalarySD <- sd(clownData$salary)
print(paste("Salary SD: ", clownSalarySD))
byGenderAndPartyMean <- aggregate(salary~gender+party, data = clownData)
print(byGenderAndPartyMean)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
library(dplyr) # great library for massaging data
library(ggplot2) #library for making great plots
library(ez) # library for doing ANOVA statistics easily
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
library(dplyr) # great library for massaging data
library(ggplot2) #library for making great plots
library(ez) # library for doing ANOVA statistics easily
clownData <- read.csv("clowns.csv", header = TRUE, sep="")
head(clownData)
clownSalaryMean <- mean(clownData$salary)
print(paste("Salary Mean: ", clownSalaryMean))
clownSalarySD <- sd(clownData$salary)
print(paste("Salary SD: ", clownSalarySD))
byGenderAndPartyMean <- aggregate(salary~gender+party, data = clownData)
print(byGenderAndPartyMean)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
byGenderAndPartyMean <- aggregate(salary~gender+party, data = clownData)
byGenderAndPartyMean <- aggregate(salary~gender+party, data = clownData)
byGenderAndPartyMean <- aggregate(salary~gender+party, data = clownData, mean_cl_normal())
print(byGenderAndPartyMean)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
byGenderAndPartyMean <- aggregate(salary~gender+party, data = clownData, mean_cl_normal())
byGenderAndPartyMean <- aggregate(salary~gender+party, data = clownData, mean)
print(byGenderAndPartyMean)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
bysubject<-group_by(data,subject) #create separate groups of data, one for each subject
averages<-summarize(bysubject,count=n(),rt=mean(RT),hit=mean(hit)) #gives average accuracy and RT per subject, plus the counts
print(averages)
bysubject<-group_by(data,subject) #create separate groups of data, one for each subject
#For all dplyr commands, first argument is the data frame, and subsequent arguments describe what to do with data, resulting in a new dataframe
data = read.csv(file="exp1.csv",header=T,sep="") # read in data with headers for column names.  You'll need to change the directory path to point to where you put the file on your computer.
head(data) #show what first 10 rows of data look like, just to get oriented
dim(data) #tells us how many rows and columns data has
length(unique(data$subject)) # report number of subjects in experiment
table(data$subject) #show counts for each value of subject (i.e. for each subject) - make sure that a subject didn't quit out early
#The following are examples of basic data munging commands in dplyr
filtered<-filter(data,subject==2 & trial_type=="test") # == for logical equals.  Returns only rows satisfying the condition.  Use | for OR
ordered<-arrange(filtered,desc(trial)) #arrange filtered in descending order of trials
select(ordered,RT,hit) #select only RT and hit columns from ordered.  Unlike "filter" because it takes a subset of the columns, whereas filter takes a subset of rows
addedInfo<-mutate(data,trialwiblock=trial %% 24) # add a new column to original data based on trial
summarize(data,mean(RT)) # just gives mean of entire dataset.  Same as mean(data$rt) but useful with other aggregating commands
bysubject<-group_by(data,subject) #create separate groups of data, one for each subject
averages<-summarize(bysubject,count=n(),rt=mean(RT),hit=mean(hit)) #gives average accuracy and RT per subject, plus the counts
print(averages)
byGenderAndPartyMean <- aggregate(salary~gender+party, data = clownData, )
clownData <- read.csv("clowns.csv", header = TRUE, sep="")
head(clownData)
clownSalaryMean <- mean(clownData$salary)
print(paste("Salary Mean: ", clownSalaryMean))
clownSalarySD <- sd(clownData$salary)
print(paste("Salary SD: ", clownSalarySD))
byGenderAndPartyMean <- aggregate(salary~gender+party, data = clownData, )
wnData, mean)
byGenderAndPartyMean <- aggregate(salary~gender+party, data = clownData, mean)
print(byGenderAndPartyMean)
byseveral<-group_by(data,subject,schedule,group,studied,trial_type) #break data down more, by subject, schedule, studied AND group.  Even though group never changes within subject, it can be listed so that the variable is included
library(dplyr) # great library for massaging data
library(ggplot2) #library for making great plots
library(ez) # library for doing ANOVA statistics easily
#For all dplyr commands, first argument is the data frame, and subsequent arguments describe what to do with data, resulting in a new dataframe
data = read.csv(file="exp1.csv",header=T,sep="") # read in data with headers for column names.  You'll need to change the directory path to point to where you put the file on your computer.
head(data) #show what first 10 rows of data look like, just to get oriented
dim(data) #tells us how many rows and columns data has
length(unique(data$subject)) # report number of subjects in experiment
table(data$subject) #show counts for each value of subject (i.e. for each subject) - make sure that a subject didn't quit out early
#The following are examples of basic data munging commands in dplyr
filtered<-filter(data,subject==2 & trial_type=="test") # == for logical equals.  Returns only rows satisfying the condition.  Use | for OR
ordered<-arrange(filtered,desc(trial)) #arrange filtered in descending order of trials
select(ordered,RT,hit) #select only RT and hit columns from ordered.  Unlike "filter" because it takes a subset of the columns, whereas filter takes a subset of rows
addedInfo<-mutate(data,trialwiblock=trial %% 24) # add a new column to original data based on trial
summarize(data,mean(RT)) # just gives mean of entire dataset.  Same as mean(data$rt) but useful with other aggregating commands
bysubject<-group_by(data,subject) #create separate groups of data, one for each subject
print(bysubject)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
byGenderAndParty <- group_by(clownData, gender, party)
averages<-summarize(byGenderAndParty,rt=mean(RT),hit=mean(hit))
averages<-summarize(byGenderAndParty,rt=mean(salary),hit=mean())
averages<-summarize(byGenderAndParty,rt=mean(salary))
byGenderAndParty <- group_by(clownData, gender, party)
averages<-summarize(byGenderAndParty,mean=mean(salary))
ggplot(averages,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
byGenderAndParty <- group_by(clownData, gender, party)
averages<-summarize(byGenderAndParty,RT=mean(salary))
ggplot(averages,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
# example of line graph - almost exactly the same except "bar" -> "point" and add lines
ggplot(averages,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
byGenderAndParty <- group_by(clownData, gender, party)
averages<-summarize(byGenderAndParty,rt=mean(salary))
ggplot(averages,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
byGenderAndParty <- group_by(clownData, party)
averages<-summarize(byGenderAndParty,rt=mean(salary),hit=mean(gender))
ggplot(averages,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
byGenderAndPartyMean <- aggregate(salary~gender+party, data = clownData, mean)
print(byGenderAndPartyMean)
byGenderAndPartyMean <- group_by(clownData, gender, party)
print(byGenderAndPartyMean)
byGenderAndPartyMean <- aggregate(salary~gender+party, data = clownData, mean)
print(byGenderAndPartyMean)
byGenderAndParty <- group_by(clownData, gender, party)
byGenderAndPartyMean <- summarize(byGenderAndParty)
print(byGenderAndPartyMean)
byGenderAndPartyMean <- aggregate(salary~gender+party, data = clownData, mean)
print(byGenderAndPartyMean)
byGenderAndParty <- group_by(clownData, gender, party)
byGenderAndPartyMean <- summarize(byGenderAndParty, mean)
byGenderAndPartyMean <- aggregate(salary~gender+party, data = clownData, mean)
print(byGenderAndPartyMean)
byGenderAndParty <- group_by(clownData, gender, party)
byGenderAndPartyMean <- summarize(byGenderAndParty, salary=mean(salary))
print(byGenderAndPartyMean)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
byGenderAndParty <- group_by(clownData, gender, party)
byGenderAndPartyMean <- summarize(byGenderAndParty, salary=mean(salary))
print(byGenderAndPartyMean)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,fill=gender,group=gender))+ stat_summary(fun=mean,geom="bar",position=position_dodge(width=0.9))+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party Affiliation")+ylab("Salary")+ theme(text=element_text(size=15))
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+geom_errorbar(aes(ymin = lower, ymax = upper))+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+geom_point()+geom_errorbar(aes(ymin = lower, ymax = upper))+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+geom_point()+geom_errorbar()+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_sdl,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_boot(),geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_boot,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_se(byGenderAndPartyMean),geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_se,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=smean_cl_boot,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_boot,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
library(dplyr) # great library for massaging data
library(ggplot2) #library for making great plots
library(ez) # library for doing ANOVA statistics easily
#For all dplyr commands, first argument is the data frame, and subsequent arguments describe what to do with data, resulting in a new dataframe
data = read.csv(file="exp1.csv",header=T,sep="") # read in data with headers for column names.  You'll need to change the directory path to point to where you put the file on your computer.
head(data) #show what first 10 rows of data look like, just to get oriented
dim(data) #tells us how many rows and columns data has
length(unique(data$subject)) # report number of subjects in experiment
table(data$subject) #show counts for each value of subject (i.e. for each subject) - make sure that a subject didn't quit out early
#The following are examples of basic data munging commands in dplyr
filtered<-filter(data,subject==2 & trial_type=="test") # == for logical equals.  Returns only rows satisfying the condition.  Use | for OR
#For all dplyr commands, first argument is the data frame, and subsequent arguments describe what to do with data, resulting in a new dataframe
data = read.csv(file="exp1.csv",header=T,sep="") # read in data with headers for column names.  You'll need to change the directory path to point to where you put the file on your computer.
head(data) #show what first 10 rows of data look like, just to get oriented
dim(data) #tells us how many rows and columns data has
length(unique(data$subject)) # report number of subjects in experiment
table(data$subject) #show counts for each value of subject (i.e. for each subject) - make sure that a subject didn't quit out early
#The following are examples of basic data munging commands in dplyr
filtered<-filter(data,subject==2 & trial_type=="test") # == for logical equals.  Returns only rows satisfying the condition.  Use | for OR
ordered<-arrange(filtered,desc(trial)) #arrange filtered in descending order of trials
select(ordered,RT,hit) #select only RT and hit columns from ordered.  Unlike "filter" because it takes a subset of the columns, whereas filter takes a subset of rows
addedInfo<-mutate(data,trialwiblock=trial %% 24) # add a new column to original data based on trial
summarize(data,mean(RT)) # just gives mean of entire dataset.  Same as mean(data$rt) but useful with other aggregating commands
library(dplyr) # great library for massaging data
library(ggplot2) #library for making great plots
library(ez) # library for doing ANOVA statistics easily
#For all dplyr commands, first argument is the data frame, and subsequent arguments describe what to do with data, resulting in a new dataframe
data = read.csv(file="exp1.csv",header=T,sep="") # read in data with headers for column names.  You'll need to change the directory path to point to where you put the file on your computer.
byseveral<-group_by(data,subject,schedule,group,studied,trial_type) #break data down more, by subject, schedule, studied AND group.  Even though group never changes within subject, it can be listed so that the variable is included
averages<-summarize(byseveral,rt=mean(RT),hit=mean(hit))
#in ggplot, first specify data (testonly), then aes (for aesthetics) specifies variables. coord_cartesian() to limit Y axis to small range, stat_summary to use bars to show means.  Then, a second stat_summary to plot error bars, "dodged" so that they don't overlap
ggplot(testonly,aes(x=schedule,y=hit,fill=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="bar",position=position_dodge(width=0.9))+stat_summary(fun.data=mean_cl_normal,geom="errorbar",position=position_dodge(0.9))+xlab("Schedule")+ylab("Percent Correct")
#in ggplot, first specify data (testonly), then aes (for aesthetics) specifies variables. coord_cartesian() to limit Y axis to small range, stat_summary to use bars to show means.  Then, a second stat_summary to plot error bars, "dodged" so that they don't overlap
ggplot(averages,aes(x=schedule,y=hit,fill=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="bar",position=position_dodge(width=0.9))+stat_summary(fun.data=mean_cl_normal,geom="errorbar",position=position_dodge(0.9))+xlab("Schedule")+ylab("Percent Correct")
# Second example, showing how to break down the data still further, with a facet for each kind of stimulus (studied or novel)
ggplot(averages,aes(x=schedule,y=hit,fill=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="bar",position=position_dodge(width=0.9))+stat_summary(fun.data=mean_cl_normal,geom="errorbar",position=position_dodge(0.9))+xlab("Schedule")+ylab("Percent Correct")+facet_wrap(~studied)
# example of line graph - almost exactly the same except "bar" -> "point" and add lines
ggplot(avergaes,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
# example of line graph - almost exactly the same except "bar" -> "point" and add lines
ggplot(avergaes,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
#in ggplot, first specify data (testonly), then aes (for aesthetics) specifies variables. coord_cartesian() to limit Y axis to small range, stat_summary to use bars to show means.  Then, a second stat_summary to plot error bars, "dodged" so that they don't overlap
ggplot(averages,aes(x=schedule,y=hit,fill=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="bar",position=position_dodge(width=0.9))+stat_summary(fun.data=mean_cl_normal,geom="errorbar",position=position_dodge(0.9))+xlab("Schedule")+ylab("Percent Correct")
# Second example, showing how to break down the data still further, with a facet for each kind of stimulus (studied or novel)
ggplot(averages,aes(x=schedule,y=hit,fill=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="bar",position=position_dodge(width=0.9))+stat_summary(fun.data=mean_cl_normal,geom="errorbar",position=position_dodge(0.9))+xlab("Schedule")+ylab("Percent Correct")+facet_wrap(~studied)
# example of line graph - almost exactly the same except "bar" -> "point" and add lines
ggplot(avergaes,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
# example of line graph - almost exactly the same except "bar" -> "point" and add lines
ggplot(avergaes,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
# example of line graph - almost exactly the same except "bar" -> "point" and add lines
ggplot(avergaes,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
# example of line graph - almost exactly the same except "bar" -> "point" and add lines
ggplot(avergaes,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
# example of line graph - almost exactly the same except "bar" -> "point" and add lines
ggplot(averages,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
print(averages)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(dplyr) # great library for massaging data
library(ggplot2) #library for making great plots
library(ez) # library for doing ANOVA statistics easily
clownData <- read.csv("clowns.csv", header = TRUE, sep="")
head(clownData)
clownSalaryMean <- mean(clownData$salary)
print(paste("Salary Mean: ", clownSalaryMean))
clownSalarySD <- sd(clownData$salary)
print(paste("Salary SD: ", clownSalarySD))
#byPartyMean <- aggregate(salary~party, data=clownData, mean)
print(byPartyMean)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(dplyr) # great library for massaging data
library(ggplot2) #library for making great plots
library(ez) # library for doing ANOVA statistics easily
clownData <- read.csv("clowns.csv", header = TRUE, sep="")
head(clownData)
clownSalaryMean <- mean(clownData$salary)
print(paste("Salary Mean: ", clownSalaryMean))
clownSalarySD <- sd(clownData$salary)
print(paste("Salary SD: ", clownSalarySD))
byPartyMean <- aggregate(salary~party, data=clownData, mean)
print(byPartyMean)
byGenderMean <- aggregate(salary~gender, data=clownData, mean)
print(byGenderMean)
byGenderAndParty <- group_by(clownData, gender, party)
byGenderAndPartyMean <- summarize(byGenderAndParty, salary=mean(salary))
print(byGenderAndPartyMean)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,fill=gender,group=gender))+ stat_summary(fun=mean,geom="bar",position=position_dodge(width=0.9))+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party Affiliation")+ylab("Salary")+ theme(text=element_text(size=15))
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width = 0.90),width=0.2)+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="bar",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width = 0.90),width=0.2)+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,fill=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="bar",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width = 0.90),width=0.2)+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,fill=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="bar",aes(size=3), ,position=position_dodge(width=0.9))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width = 0.90),width=0.2)+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,fill=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="bar",aes(size=3), ,position=position_dodge(width=0.9))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width = 0.90),width=0.2)+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,fill=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="bar",aes(size=3), ,position=position_dodge(width=0.9))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar",position=position_dodge(0.9)),width=0.2)+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,fill=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="bar",aes(size=3), ,position=position_dodge(width=0.9))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar",position=position_dodge(0.9),width=0.2)+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,fill=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="bar",aes(size=3), ,position=position_dodge(width=0.9))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar",position=position_dodge(0.9)),width=0.2)+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,fill=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="bar",aes(size=3), ,position=position_dodge(width=0.9))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar",position=position_dodge(0.9),width=0.2))+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,fill=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="bar",aes(size=3), ,position=position_dodge(width=0.9))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar",position=position_dodge(0.9),width=0.2)+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,fill=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="bar",aes(size=3), ,position=position_dodge(width=0.9))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar",position=position_dodge(0.9))+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
spamData <- read.csv("spam.csv",header = TRUE, sep="")
head(spamData)
spamData <- read.csv("spam.csv",header = TRUE, sep="")
head(spamData)
ggplot(spamData)
spamData <- read.csv("spam.csv",header = TRUE, sep="")
head(spamData)
plot(spamData)
spamData <- read.csv("spam.csv",header = TRUE, sep="")
head(spamData)
plot(spamData$spam, spamData$scum)
spamData <- read.csv("spam.csv",header = TRUE, sep="")
head(spamData)
plot(spamData$spam, spamData$scum, xlab = "Spam-fed Twin", ylab = "Scum-fed Twin")
cor.test(spamData$spam, spamData$scum)
t.test(spamData$spam, spamData$scum, paired = TRUE)
t.test(spamData$spam, spamData$scum)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,fill=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="bar",aes(size=3),position=position_dodge(width=0.9))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar",position=position_dodge(0.9))+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(dplyr) # great library for massaging data
library(ggplot2) #library for making great plots
library(ez) # library for doing ANOVA statistics easily
clownData <- read.csv("clowns.csv", header = TRUE, sep="")
head(clownData)
clownSalaryMean <- mean(clownData$salary)
print(paste("Salary Mean: ", clownSalaryMean))
clownSalarySD <- sd(clownData$salary)
print(paste("Salary SD: ", clownSalarySD))
byPartyMean <- aggregate(salary~party, data=clownData, mean)
print(byPartyMean)
byGenderMean <- aggregate(salary~gender, data=clownData, mean)
print(byGenderMean)
byGenderAndParty <- group_by(clownData, gender, party)
byGenderAndPartyMean <- summarize(byGenderAndParty, salary=mean(salary))
print(byGenderAndPartyMean)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width = 0.90),width=0.2)+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,fill=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="bar",aes(size=3),position=position_dodge(width=0.9))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar",position=position_dodge(0.9))+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
spamData <- read.csv("spam.csv",header = TRUE, sep="")
head(spamData)
plot(spamData$spam, spamData$scum, xlab = "Spam-fed Twin", ylab = "Scum-fed Twin")
cor.test(spamData$spam, spamData$scum)
t.test(spamData$spam, spamData$scum, paired = TRUE)
t.test(spamData$spam, spamData$scum)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width = 0.90),width=0.2)+xlab("Party")+ylab("Salary")+ theme(text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,fill=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="bar",aes(size=3),position=position_dodge(width=0.9))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar",position=position_dodge(0.9))+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
install.packages(ggplot2)
install.packages(c("ggplot2", "dplyr", "ez"))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(dplyr) # great library for massaging data
library(ggplot2) #library for making great plots
library(ez) # library for doing ANOVA statistics easily
clownData <- read.csv("clowns.csv", header = TRUE, sep="")
head(clownData)
clownSalaryMean <- mean(clownData$salary)
print(paste("Salary Mean: ", clownSalaryMean))
clownSalarySD <- sd(clownData$salary)
print(paste("Salary SD: ", clownSalarySD))
byPartyMean <- aggregate(salary~party, data=clownData, mean)
print(byPartyMean)
byGenderMean <- aggregate(salary~gender, data=clownData, mean)
print(byGenderMean)
byGenderAndParty <- group_by(clownData, gender, party)
byGenderAndPartyMean <- summarize(byGenderAndParty, salary=mean(salary))
print(byGenderAndPartyMean)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width = 0.90),width=0.2)+xlab("Party")+ylab("Salary")+ theme(text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,fill=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="bar",aes(size=3),position=position_dodge(width=0.9))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar",position=position_dodge(0.9))+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
spamData <- read.csv("spam.csv",header = TRUE, sep="")
head(spamData)
plot(spamData$spam, spamData$scum, xlab = "Spam-fed Twin", ylab = "Scum-fed Twin")
cor.test(spamData$spam, spamData$scum)
t.test(spamData$spam, spamData$scum, paired = TRUE)
t.test(spamData$spam, spamData$scum)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(dplyr) # great library for massaging data
library(ggplot2) #library for making great plots
library(ez) # library for doing ANOVA statistics easily
clownData <- read.csv("clowns.csv", header = TRUE, sep="")
head(clownData)
clownSalaryMean <- mean(clownData$salary)
print(paste("Salary Mean: ", clownSalaryMean))
clownSalarySD <- sd(clownData$salary)
print(paste("Salary SD: ", clownSalarySD))
byPartyMean <- aggregate(salary~party, data=clownData, mean)
print(byPartyMean)
byGenderMean <- aggregate(salary~gender, data=clownData, mean)
print(byGenderMean)
byGenderAndParty <- group_by(clownData, gender, party)
byGenderAndPartyMean <- summarize(byGenderAndParty, salary=mean(salary))
print(byGenderAndPartyMean)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width = 0.90),width=0.2)+xlab("Party")+ylab("Salary")+ theme(text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,fill=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="bar",aes(size=3),position=position_dodge(width=0.9))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar",position=position_dodge(0.9))+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
spamData <- read.csv("spam.csv",header = TRUE, sep="")
head(spamData)
plot(spamData$spam, spamData$scum, xlab = "Spam-fed Twin", ylab = "Scum-fed Twin")
cor.test(spamData$spam, spamData$scum)
t.test(spamData$spam, spamData$scum, paired = TRUE)
t.test(spamData$spam, spamData$scum)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(dplyr) # great library for massaging data
library(ggplot2) #library for making great plots
library(ez) # library for doing ANOVA statistics easily
clownData <- read.csv("clowns.csv", header = TRUE, sep="")
head(clownData)
clownSalaryMean <- mean(clownData$salary)
print(paste("Salary Mean: ", clownSalaryMean))
clownSalarySD <- sd(clownData$salary)
print(paste("Salary SD: ", clownSalarySD))
byPartyMean <- aggregate(salary~party, data=clownData, mean)
print(byPartyMean)
byGenderMean <- aggregate(salary~gender, data=clownData, mean)
print(byGenderMean)
byGenderAndParty <- group_by(clownData, gender, party)
byGenderAndPartyMean <- summarize(byGenderAndParty, salary=mean(salary))
print(byGenderAndPartyMean)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width = 0.90),width=0.2)+xlab("Party")+ylab("Salary")+ theme(text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,fill=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="bar",aes(size=3),position=position_dodge(1width=0.9))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar",position=position_dodge(0.9))+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(dplyr) # great library for massaging data
library(ggplot2) #library for making great plots
library(ez) # library for doing ANOVA statistics easily
clownData <- read.csv("clowns.csv", header = TRUE, sep="")
head(clownData)
clownSalaryMean <- mean(clownData$salary)
print(paste("Salary Mean: ", clownSalaryMean))
clownSalarySD <- sd(clownData$salary)
print(paste("Salary SD: ", clownSalarySD))
byPartyMean <- aggregate(salary~party, data=clownData, mean)
print(byPartyMean)
byGenderMean <- aggregate(salary~gender, data=clownData, mean)
print(byGenderMean)
byGenderAndParty <- group_by(clownData, gender, party)
byGenderAndPartyMean <- summarize(byGenderAndParty, salary=mean(salary))
print(byGenderAndPartyMean)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width = 0.90),width=0.2)+xlab("Party")+ylab("Salary")+ theme(text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,fill=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="bar",aes(size=3),position=position_dodge(width=0.9))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar",position=position_dodge(0.9))+xlab("Party")+ylab("Salary")+ theme (text=element_text(size=20))+guides(size = FALSE)
spamData <- read.csv("spam.csv",header = TRUE, sep="")
head(spamData)
plot(spamData$spam, spamData$scum, xlab = "Spam-fed Twin", ylab = "Scum-fed Twin")
cor.test(spamData$spam, spamData$scum)
t.test(spamData$spam, spamData$scum, paired = TRUE)
t.test(spamData$spam, spamData$scum)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data = mean_cl_normal, geom = "errorbar")+xlab("Party")+ylab("Salary")+ theme(text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(byGenderAndPartyMean,aes(x=party,y=salary,fill=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="bar",aes(size=3),position=position_dodge(width=0.9))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar",position=position_dodge(0.9))+xlab("Party")+ylab("Salary")+theme(text=element_text(size=20))+guides(size = FALSE)
install.packages(c("dplyr", "ez", "ggplot2"))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(dplyr) # great library for massaging data
library(ggplot2) #library for making great plots
library(ez) # library for doing ANOVA statistics easily
clownData <- read.csv("clowns.csv", header = TRUE, sep="")
head(clownData)
clownSalaryMean <- mean(clownData$salary)
print(paste("Salary Mean: ", clownSalaryMean))
clownSalarySD <- sd(clownData$salary)
print(paste("Salary SD: ", clownSalarySD))
byPartyMean <- aggregate(salary~party, data=clownData, mean)
print(byPartyMean)
byGenderMean <- aggregate(salary~gender, data=clownData, mean)
print(byGenderMean)
byGenderAndParty <- group_by(clownData, gender, party)
byGenderAndPartyMean <- summarize(byGenderAndParty, salary=mean(salary))
print(byGenderAndPartyMean)
ggplot(clownData,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width = 0.90),width=0.2)+xlab("Party")+ylab("Salary")+ theme(text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(clownData,aes(x=party,y=salary,fill=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="bar",aes(size=3),position=position_dodge(width=0.9))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar",position=position_dodge(0.9))+xlab("Party")+ylab("Salary")+theme(text=element_text(size=20))+guides(size = FALSE)
spamData <- read.csv("spam.csv",header = TRUE, sep="")
head(spamData)
plot(spamData$spam, spamData$scum, xlab = "Spam-fed Twin", ylab = "Scum-fed Twin")
cor.test(spamData$spam, spamData$scum)
t.test(spamData$spam, spamData$scum, paired = TRUE)
t.test(spamData$spam, spamData$scum)
ggplot(clownData,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data = mean_cl_normal, geom = "errorbar")+xlab("Party")+ylab("Salary")+ theme(text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(clownData,aes(x=party,y=salary,fill=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="bar",aes(size=3),position=position_dodge(width=0.9))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+theme(text=element_text(size=20))+guides(size = FALSE)
ggplot(clownData,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data = mean_cl_normal, geom = "errorbar",position=position_dodge(0.9))+xlab("Party")+ylab("Salary")+ theme(text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(clownData,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width = 0.90),width=0.2)+xlab("Party")+ylab("Salary")+ theme(text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(clownData,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data = mean_cl_normal, geom = "errorbar")+xlab("Party")+ylab("Salary")+ theme(text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(clownData,aes(x=party,y=salary,fill=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="bar",aes(size=3),position=position_dodge(width=0.9))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Party")+ylab("Salary")+theme(text=element_text(size=20))+guides(size = FALSE)
ggplot(clownData,aes(x=party,y=salary,fill=gender))+coord_cartesian(ylim = c(25000, 37000))+ stat_summary(fun=mean,geom="bar",aes(size=3),position=position_dodge(width=0.9))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar",position=position_dodge(0.9))+xlab("Party")+ylab("Salary")+theme(text=element_text(size=20))+guides(size = FALSE)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
ggplot(clownData,aes(x=party,y=salary,fill=gender))+ stat_summary(fun=mean,geom="bar",aes(size=3),position=position_dodge(width=0.9))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar",position=position_dodge(0.9))+xlab("Party")+ylab("Salary")+theme(text=element_text(size=20))+guides(size = FALSE)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(dplyr) # great library for massaging data
library(ggplot2) #library for making great plots
library(ez) # library for doing ANOVA statistics easily
clownData <- read.csv("clowns.csv", header = TRUE, sep="")
head(clownData)
clownSalaryMean <- mean(clownData$salary)
print(paste("Salary Mean: ", clownSalaryMean))
clownSalarySD <- sd(clownData$salary)
print(paste("Salary SD: ", clownSalarySD))
byPartyMean <- aggregate(salary~party, data=clownData, mean)
print(byPartyMean)
byGenderMean <- aggregate(salary~gender, data=clownData, mean)
print(byGenderMean)
byGenderAndParty <- group_by(clownData, gender, party)
byGenderAndPartyMean <- summarize(byGenderAndParty, salary=mean(salary))
print(byGenderAndPartyMean)
ggplot(clownData,aes(x=party,y=salary,color=gender,group=gender,shape=gender))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data = mean_cl_normal, geom = "errorbar")+xlab("Party")+ylab("Salary")+ theme(text=element_text(size=20))+guides(size = FALSE)
#ggplot(testonly,aes(x=schedule,y=hit,color=group,group=group,shape=group))+coord_cartesian(ylim = c(0.9, 1))+ stat_summary(fun=mean,geom="point",aes(size=3))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar")+xlab("Schedule")+ylab("Percent Correct")+ theme (text=element_text(size=20))+guides(size = FALSE)
ggplot(clownData,aes(x=party,y=salary,fill=gender))+ stat_summary(fun=mean,geom="bar",aes(size=3),position=position_dodge(width=0.9))+stat_summary(fun=mean,geom="line")+stat_summary(fun.data=mean_cl_normal,geom="errorbar",position=position_dodge(0.9))+xlab("Party")+ylab("Salary")+theme(text=element_text(size=20))+guides(size = FALSE)
spamData <- read.csv("spam.csv",header = TRUE, sep="")
head(spamData)
plot(spamData$spam, spamData$scum, xlab = "Spam-fed Twin", ylab = "Scum-fed Twin")
cor.test(spamData$spam, spamData$scum)
t.test(spamData$spam, spamData$scum, paired = TRUE)
t.test(spamData$spam, spamData$scum)
